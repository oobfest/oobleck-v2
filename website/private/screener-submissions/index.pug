extends ../../_layout
block content
  header.dash-titlebar
    .mb-md-0.mb-3
      span.dash-titlebar-title Screener Submissions
    a.btn.btn-primary.ml-md-auto(href="/apply-screener") Apply

  #app.dash-boxes.container-fluid
    .box.box-b
      table.box-table.table
        thead
          tr
            th 
              a(href="#" @click.prevent="sortField='name'") Name
            th 
              a(href="#" @click.prevent="sortField='email'") Email
            th Phone
            th 
              a(href="#" @click.prevent="sortField='city'") City
            th 
              a(href="#" @click.prevent="sortField='homeTheater'") Home
          tr
            td
              input.form-control(type="text" v-model="nameSearch")
            td 
              input.form-control(type="text" v-model="emailSearch")
            td
            td
              input.form-control(type="text" v-model="citySearch")
            td
              input.form-control(type="text" v-model="homeSearch")

        tbody(is="submission-row" v-for="(submission, index) in filteredSubmissions" v-bind:submission="submission" v-bind:key="index" @removed="remove")
  
  script#submission-row-template(type="text/x-template")
    tbody
      tr
        td 
          a(href="#" @click="visible=!visible") {{submission.name}}
        td {{submission.email}}
        td {{submission.phone}}
        td {{submission.city}}, {{submission.state}}
        td {{submission.homeTheater}}
      tr(v-show="visible")
        td(colspan=5)
          h4 Tell us about yourself
          p {{submission.aboutYou}}
          h4 Why do you think you'd be a good screener?
          p {{submission.whyYou}}
          h4 Conflicts
          p {{submission.conflicts}}
          h4 Previous Experience
          p {{submission.previousExperience}}
          p
            a.text-danger(href="#" @click="remove(submission.name, submission._id)") Delete Screener Submission

  script.

    Vue.component('submission-row', {
      props: ['submission'],
      template: "#submission-row-template",
      data() { return {
          visible: false
      }},
      methods: {
        remove(name, id) {
          let self = this
          if(confirm("Delete " + name + "?")) {
            axios.delete('/api/screener-submissions/' + id)
              .then((response)=> {
                self.visible = false
                self.$emit('removed', id)
              })
              .catch((error)=> {
                console.log(error)
              })
          }
        },
      }
    })

    let vue = new Vue({
      el: "#app",
      data() { return {
        nameSearch: "",
        emailSearch: "",
        citySearch: "",
        homeSearch: "",
        sortField: "name",
        submissions: []
      }},
      computed: {
        filteredSubmissions() {
          let filteredSubmissions = this.submissions

          if(this.nameSearch) filteredSubmissions = filteredSubmissions.filter(s=> s.name.includes(this.nameSearch))
          if(this.emailSearch) filteredSubmissions = filteredSubmissions.filter(s=> s.email.includes(this.emailSearch))
          if(this.citySearch) filteredSubmissions = filteredSubmissions.filter(s=> s.city.includes(this.citySearch))
          if(this.homeSearch) filteredSubmissions = filteredSubmissions.filter(s=> s.homeTheater.includes(this.homeSearch))

          filteredSubmissions.sort((a, b)=> {
            let textA = a[this.sortField].toUpperCase()
            let textB = b[this.sortField].toUpperCase()
            if(textA < textB) return -1
            else if (textA > textB) return 1
            else return 0
          })

          return filteredSubmissions
        }
      },
      methods: {
        remove(id) {
          let index = this.submissions.findIndex(s=> s._id == id)
          this.submissions.splice(index, 1)
        }
      },
      created() {
        let self = this
        axios.get('/api/screener-submissions')
          .then((response)=> {
            self.submissions = response.data
          })
          .catch((error)=> {
            console.log(error)
          })
      }
    })