script.
  const store = new Vuex.Store({
    state: {
      shows: [],
      acts: [],
      workshops: [],
      hosts: [],
      addShowModal: { day: '', venue: '', time: '' },
      addActModal: { day: '', venue: '', time: '', _id: '' },
      addWorkshopModal: { day: '', venue: '', time: ''},
      showId: '',
    },
    getters: {
      getShows: state => (day, venue) => {
        return state.shows.filter(show=> {return (show.day === day && show.venue === venue)})
      },
      getWorkshops: state => (day, venue) => {
        return state.workshops
          .filter(workshop=> { return (workshop.day == day && workshop.venue == venue)})
          .sort((a,b)=> { return (a.time > b.time) ? 1 : ((b.time > a.time) ? -1 : 0)})
      },
      getAct: state => (id) => {
        return state.acts.find(a=> a._id == id)
      },
      getAllWorkshops: state => {
        return state.workshops
      },
      getWorkshopModal: state => {
        return state.addWorkshopModal
      },
      getUpdateActDurationModal: state => {
        return state.updateActDurationModal
      },
      getAllHosts: state => {
        return state.hosts
      },
      getHost: state => (id) => {
        return state.hosts.find(h=> h._id == id)
      },
      getShowId: state => {
        return state.showId
      }
    },
    mutations: {
      updateActDurationModal(state, payload) {
        state.updateActDurationModal = payload
      },
      addShowModal(state, payload) {
        state.addShowModal = payload
      },
      addShow(state, payload) {
        state.shows.push(payload)
      },
      updateShow(state, payload) {
        let showIndex = state.shows.findIndex(s=> s._id === payload._id)
        Vue.set(state.shows, showIndex, payload)
      },
      removeShow(state, payload) {
        state.shows.splice(state.shows.findIndex(s=> s._id === payload), 1)
      },
      addWorkshopModal(state, payload) {
        state.addWorkshopModal = payload
      },
      updateWorkshop(state, payload) {
        let workshop = state.workshops.findIndex(w=> w._id === payload._id)
        Vue.set(state.workshops, workshop, payload)
      },
      removeWorkshop(state, payload) {
        let workshopIndex = state.workshops.findIndex(w=> w._id === payload)
        state.workshops.splice(workshopIndex, 1)
      },
      setShowId(state, payload) {
        state.showId = payload
      },      
      setupShows(state, payload) {
        state.shows = payload
      },
      setupActs(state, payload) {
        state.acts = payload
      },
      setupWorkshops(state, payload) {
        state.workshops = payload
      },
      setupHosts(state, payload) {
        state.hosts = payload
      }
    }
  })