div
  #badges
    div.text-center
      .row.justify-content-md-center
        .col-md-10
          .card-deck
            .card.bg-blue
              .card-head
                h2.m-3 Purchase All-Access Badge
              .card-body
                .row
                  .col-md.align-self-center
                    img.img-fluid.img-thumbnail(src="/img/ggg.jpg")
                  .col.align-self-center(v-show="card1State==1")
                    p.font-italic.mb-0 Special "early bird" price for a limited time!
                    .card-title
                      h3.price
                        sup.dollar-sign $
                        span 99
                    ul
                      li Access to All Shows (Including Headliners)
                      li Reserve Your Seat Ahead of Time
                      li Invitation to the After-Parties
                      li Food and Drink Discounts

                    button.btn.btn-primary.btn-lg(type="button" @click="card1State++; badge.type='all'; badge.weekendOnly=null") Buy Now
                  .col(v-show="card1State==2").text-left.align-self-center
                    .max-width
                      .form-group
                        label(for="name") Full Name
                        input#name.form-control(type="text" v-model="badge.name")
                      .form-group
                        label(for="phone") Phone Number
                        input#phone.form-control(type="tel" v-model="badge.phone")
                      .form-group
                        label(for="quantity") Quantity
                        select#quantity.custom-select(name="quantity" v-model.number="badge.quantity")
                          option(selected) 1
                          option 2
                          option 3
                          option 4
                          option 5
                      .row
                        .col.text-right
                          .form-group
                            button#stripe-button.btn.btn-lg.btn-primary(@click.prevent="stripeHandler") Pay with Stripe
                        .col.text-left
                          button.btn.btn-secondary.btn-lg(type="button" @click="card1State--") Cancel
                      .row
                        .col.text-center
                          img(src="/img/powered-by-stripe.svg" height="55px")
                  .col.align-self-center(v-show="card1State==3")
                    p Thank you for your purchase!
                    p A confirmation email has been sent to&nbsp;
                      span.code {{badge.email}}
      .row.justify-content-md-center
        .col-md-10
          .card-deck.mt-5
            .card.bg-blue
              .card-head
                h2.m-3 Purchase Performer Badge Upgrade
              .card-body
                .row
                  .col.align-self-center(v-show="card2State==0")
                    .card-title
                      h3.price
                        sup.dollar-sign $
                        span 69
                        span.tiny full-week
                      h3.price
                        sup.dollar-sign $
                        span 45
                        span.tiny weekend-only
                    ul
                      li For festival performers who want to reserve tickets
                      li Upgrade your Performer badge to an All-Access badge
                      li Use the email included in your act's submission to verify
                      li Purchase a special “Weekend Upgrade” for Fri – Mon only
                    .form-group
                      button.btn.btn-primary.btn-lg(type="button" @click="badge.type='performer-weekend-upgrade'; badge.quantity=1; badge.weekendOnly=true; card2State++") Weekend Upgrade
                    .form-group
                      button.btn.btn-primary.btn-lg(type="button" @click="badge.type='performer-upgrade'; badge.quantity=1; badge.weekendOnly=false; card2State++") Full Week Upgrade
                  .col.align-self-center(v-show="card2State==1")
                    .max-width
                      .form-group
                        label(for="performer-email") Please confirm your email. Use the email address that was included on your submission form.
                        input#performer-email.form-control(type="text" v-model="badge.email")
                      button.btn.btn-primary.btn-lg(:disabled="badge.email==''" type="button" @click="validatePerformerEmail") Confirm Email Address
                      | &nbsp;
                      button.btn.btn-secondary.btn-lg(type="button" @click="card2State--") Cancel
                  .col.align-self-center(v-show="card2State==2")
                    p We did not find your email. Please try again!
                    button.btn.btn-secondary.btn-lg.mb-2(type="button" @click="card2State--") Try Again
                    p If you continue to have problems, email&nbsp;
                      span.code(style="white-space:nowrap") box-office@oobfest.com
                      |  with your name, email and the act you are performing in.
                  .col.align-self-center.text-left(v-show="card2State==3")
                    .max-width
                      p Email confirmed!
                      .form-group
                        label(for="performer-name") Full Name
                        input#performer-name.form-control(type="text" v-model="badge.name")
                      .form-group
                        label(for="performer-phone") Phone Number
                        input#performer-phone.form-control(type="tel" v-model="badge.phone")
                      .row
                        .col.text-right
                          .form-group
                            button#stripe-button-2.btn.btn-lg.btn-primary(@click.prevent="stripeHandler") Pay with Stripe
                        .col.text-left
                          button.btn.btn-secondary.btn-lg(type="button" @click="card2State-=2") Cancel
                      .row
                        .col.text-center
                          img(src="/img/powered-by-stripe.svg" height="55px")
                  .col.align-self-center(v-show="card2State==4")
                    p Thank you for your purchase!
                    p A confirmation email has been sent to&nbsp;
                      span.code {{badge.email}}

                  .col-md.align-self-center
                    img.img-fluid.img-thumbnail(src="/img/brendan-gay.jpg")
      //.row.justify-content-md-center
        .col-md-10
          .card-deck.mt-5
            .card.bg-blue.mb-5
              .card-head
                h2.m-3 Individual Tickets
              .card-body
                .row
                  .col.align-self-center
                    p Individual tickets for shows will go on sale closer to the festival start date.
                    //-p Individual tickets for shows can be bought directly from the&nbsp;
                      a(href="/schedule" style="text-decoration: underline; color: #f9a01b;") schedule
                      |  page.


  script.

    let handler = StripeCheckout.configure({
      //key: 'pk_test_vSOv2tJVVsBEI6PZJLJBNiOW',
      key: 'pk_live_iR3EiMyek6fnYWIoFptERALW',
      image: '/img/oob-logo-fire.jpg',
      locale: 'auto',
      zipCode: true,
      currency: 'usd',
      allowRememberMe: false,
      token: function(token) {
        badgeApp.badge.email = token.email
        let data = { token, badge: badgeApp.badge }
        axios
          .post('/api/stripe/badges/', data)
          .then((response)=> {
            if(response.data.paid) {
              if (badgeApp.badge.type =='all') badgeApp.card1State++
              else badgeApp.card2State++
            }
            else alert("Payment failed 😟")
          })
          .catch((error)=> {
            console.log("ERROR :(")
            console.log(error)
          })
      }
    })

    let badgeApp = new Vue({
      el: "#badges",
      data() {
        return {
          card1State: 1,
          card2State: 0,
          badge: {
            type: 'all',
            name: '',
            email: '',
            phone: '',
            quantity: 1,
            weekendOnly: false
          }
        }
      },
      methods: {
        stripeHandler() {
          if (this.isValid()) {
            handler.open({
              name: 'Out Of Bounds Comedy',
              description: 'All-Access Badge',
              amount: this.getBadgeCost()
            })
          }
          else alert("All fields are required!")
        },
        getBadgeCost() {
          if (this.badge.type == 'all') return (9900 * this.badge.quantity)
          if (this.badge.type == 'performer-upgrade') return 6900
          if (this.badge.type == 'performer-weekend-upgrade') return 4500
        },
        isValid() {
          return this.badge.name != '' &&
                 this.badge.phone != ''
        },
        isValidPerformer() {
          return this.performerBadge.name != '' &&
                 this.performerBadge.email != '' &&
                 this.performerBadge.phone != ''
        },
        validate(actions) {
          this.isValid() ? actions.enable() : actions.disable()
        },
        onChange(handler) {
          document.querySelector('#name').addEventListener('change', handler)
          document.querySelector('#email').addEventListener('change', handler)
          document.querySelector('#phone').addEventListener('change', handler)
        },
        validatePerformerBadge(actions) {
          this.isValidPerformer() ? actions.enable() : actions.disable()
        },
        onChangePerformerBadge(handler) {
          document.querySelector('#performer-name').addEventListener('change', handler)
          document.querySelector('#performer-phone').addEventListener('change', handler)
        },
        validatePerformerEmail() {
          let self = this
          axios
            .post('/api/acts/validate-performer-email', {email: this.badge.email})
            .then(function(response) {
              let isValid = response.data
              if(isValid) self.card2State+= 2
              else self.card2State++
            })
            .catch(function() {
              alert("Email check failed. Please try again later. ")
            })
        }
      },
    })